FUNCTION(SUBDIRLIST)
    set(singleValues OUT BASEDIR DIR)
    set(options OPTIONAL RECURSIVE)
    set(multiValues "")
    include(CMakeParseArguments)
    cmake_parse_arguments(SUBDIRLIST "${options}" "${singleValues}" "${multiValues}" ${ARGN} )
    IF (NOT DEFINED SUBDIRLIST_BASEDIR)
        SET(SUBDIRLIST_BASEDIR ${SUBDIRLIST_DIR})
    ENDIF()
    # craate base path from where to start first search

    #MESSAGE("Try to find in dir = ${SUBDIRLIST_DIR} (basedir=${SUBDIRLIST_BASEDIR})")
    FILE(GLOB children RELATIVE ${SUBDIRLIST_DIR} ${SUBDIRLIST_DIR}/*)
    SET(dirlist "")
    FOREACH(child ${children})
        SET(dir_path ${SUBDIRLIST_DIR}/${child})
        IF(IS_DIRECTORY ${dir_path})
            #MESSAGE("check= ${child}")
            # remove base_path from all result to make path to dir relative
            string(REPLACE ${SUBDIRLIST_BASEDIR}/ "" dir_relative_path ${dir_path})
            #MESSAGE("append dir = ${dir_relative_path}")
            LIST(APPEND dirlist ${dir_relative_path})

            # make recursive search
            if (SUBDIRLIST_RECURSIVE)
                SET(subdirs "")
                SUBDIRLIST(OUT subdirs DIR ${SUBDIRLIST_DIR}/${child} BASEDIR ${SUBDIRLIST_BASEDIR} RECURSIVE)
                if (DEFINED  subdirs)
                    #MESSAGE("subdirs = ${subdirs}")
                    LIST(APPEND dirlist ${subdirs})
                endif()
            endif()
        ENDIF()
    ENDFOREACH()
    SET(${SUBDIRLIST_OUT} ${dirlist} PARENT_SCOPE)
ENDFUNCTION()
